(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var Led, Flag;
Led = require('./led');
module.exports = Flag = (function(superclass){
  var prototype = extend$((import$(Flag, superclass).displayName = 'Flag', Flag), superclass).prototype, constructor = Flag;
  function Flag(){
    Flag.superclass.apply(this, arguments);
  }
  return Flag;
}(Led));
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}



},{"./led":2}],2:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, Q, Led;
ref$ = require('helpers'), log = ref$.log, Q = ref$.Q;
module.exports = Led = (function(){
  Led.displayName = 'Led';
  var prototype = Led.prototype, constructor = Led;
  function Led(sel){
    this.dom = Q(sel);
  }
  prototype.on = function(){
    return this.dom.setAttribute('on', true);
  };
  prototype.off = function(){
    return this.dom.removeAttribute('on');
  };
  prototype.set = function(it){
    if (it) {
      return this.on();
    } else {
      return this.off();
    }
  };
  return Led;
}());



},{"helpers":5}],3:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, QSA, Led, LedBits;
ref$ = require('helpers'), log = ref$.log, QSA = ref$.QSA;
Led = require('./led');
module.exports = LedBits = (function(){
  LedBits.displayName = 'LedBits';
  var prototype = LedBits.prototype, constructor = LedBits;
  function LedBits(sel){
    this.dom = QSA(sel).reverse();
    this.leds = this.dom.map(function(it){
      return new Led(it);
    });
  }
  prototype.set = function(it){
    var i$, ref$, len$, ix, led, results$ = [];
    for (i$ = 0, len$ = (ref$ = this.leds).length; i$ < len$; ++i$) {
      ix = i$;
      led = ref$[i$];
      results$.push(led.set(it >> ix & 1));
    }
    return results$;
  };
  return LedBits;
}());



},{"./led":2,"helpers":5}],4:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, Q, hex, Segment;
ref$ = require('helpers'), log = ref$.log, Q = ref$.Q, hex = ref$.hex;
module.exports = Segment = (function(){
  Segment.displayName = 'Segment';
  var prototype = Segment.prototype, constructor = Segment;
  function Segment(sel){
    this.dom = Q(sel);
  }
  prototype.set = function(it){
    return this.dom.textContent = hex(it);
  };
  return Segment;
}());



},{"helpers":5}],5:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var log, hex, toArray, wrap, invoke, pad2, pad4, Q, QSA, out$ = typeof exports != 'undefined' && exports || this, slice$ = [].slice;
out$.log = log = function(){
  console.log.apply(this, arguments);
  return arguments[0];
};
out$.hex = hex = compose$(function(it){
  return it.toString(16);
}, function(it){
  return it.toUpperCase();
});
out$.toArray = toArray = function(alo){
  return Array.prototype.slice.apply(alo);
};
out$.wrap = wrap = curry$(function(a, b, n){
  if (n < a) {
    return b;
  } else if (n > b) {
    return a;
  } else {
    return n;
  }
});
out$.invoke = invoke = function(位){
  var args;
  args = slice$.call(arguments, 1);
  return 位.apply(null, args);
};
out$.pad2 = pad2 = function(n, base){
  base == null && (base = 10);
  if (n < base) {
    return '0' + n.toString(base);
  } else {
    return n;
  }
};
out$.pad4 = pad4 = function(n, base){
  base == null && (base = 10);
  if (n < base * 3) {
    return '000' + n.toString(base);
  } else if (n < base * 2) {
    return '00' + n.toString(base);
  } else if (n < base * 1) {
    return '0' + n.toString(base);
  } else {
    return n.toString(base);
  }
};
out$.Q = Q = function(sel, scope){
  scope == null && (scope = document);
  if (typeof sel !== 'string') {
    return sel;
  } else {
    return scope.querySelector(sel);
  }
};
out$.QSA = QSA = function(sel, scope){
  scope == null && (scope = document);
  if (typeof sel !== 'string') {
    return sel;
  } else {
    return toArray(scope.querySelectorAll(sel));
  }
};
function compose$() {
  var functions = arguments;
  return function() {
    var i, result;
    result = functions[0].apply(this, arguments);
    for (i = 1; i < functions.length; ++i) {
      result = functions[i](result);
    }
    return result;
  };
}
function curry$(f, bound){
  var context,
  _curry = function(args) {
    return f.length > 1 ? function(){
      var params = args ? args.concat() : [];
      context = bound ? context || this : this;
      return params.push.apply(params, arguments) <
          f.length && arguments.length ?
        _curry.call(context, params) : f.apply(context, params);
    } : f;
  };
  return _curry();
}



},{}],6:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, pad2, wrap, Q, invoke, hex, Led, Flag, LedBits, Segment, Module, Clock, ProgramCounter, Mainbus, init;
ref$ = require('helpers'), log = ref$.log, pad2 = ref$.pad2, wrap = ref$.wrap, Q = ref$.Q, invoke = ref$.invoke, hex = ref$.hex;
Led = require('./components/led');
Flag = require('./components/flag');
LedBits = require('./components/ledbits');
Segment = require('./components/segment');
Module = require('./modules/module');
Clock = require('./modules/clock');
ProgramCounter = require('./modules/program-counter');
Mainbus = require('./modules/mainbus');
init = function(){
  var clock, pc, bus;
  clock = new Clock('#clock');
  pc = new ProgramCounter('#program-counter');
  bus = new Mainbus('#mainbus');
  pc.set('ce', true);
  return clock.onClock(function(){
    pc.clock();
    pc.set('co', !pc.co);
    if (pc.co) {
      return bus.set(pc.value);
    }
  });
};
document.addEventListener('DOMContentLoaded', init);



},{"./components/flag":1,"./components/led":2,"./components/ledbits":3,"./components/segment":4,"./modules/clock":7,"./modules/mainbus":8,"./modules/module":9,"./modules/program-counter":10,"helpers":5}],7:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, invoke, Led, Module, Clock;
ref$ = require('helpers'), log = ref$.log, invoke = ref$.invoke;
Led = require('../components/led');
Module = require('./module');
module.exports = Clock = (function(superclass){
  var prototype = extend$((import$(Clock, superclass).displayName = 'Clock', Clock), superclass).prototype, constructor = Clock;
  function Clock(sel){
    this.blip = bind$(this, 'blip', prototype);
    Clock.superclass.apply(this, arguments);
    this.halt = false;
    this.rate = 500;
    this.callbacks = [];
    this.signal = new Led('[data-clock-signal]');
    this.blip();
  }
  prototype.blip = function(){
    if (!this.halt) {
      this.signal.on();
      setTimeout(bind$(this.signal, 'off'), this.rate / 2);
      setTimeout(this.blip, this.rate);
      return this.callbacks.map(invoke);
    }
  };
  prototype.onClock = function(位){
    return this.callbacks.push(位);
  };
  return Clock;
}(Module));
function bind$(obj, key, target){
  return function(){ return (target || obj)[key].apply(obj, arguments) };
}
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}



},{"../components/led":2,"./module":9,"helpers":5}],8:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, pad2, LedBits, Segment, Module, Mainbus;
ref$ = require('helpers'), log = ref$.log, pad2 = ref$.pad2;
LedBits = require('../components/ledbits');
Segment = require('../components/segment');
Module = require('./module');
module.exports = Mainbus = (function(superclass){
  var prototype = extend$((import$(Mainbus, superclass).displayName = 'Mainbus', Mainbus), superclass).prototype, constructor = Mainbus;
  function Mainbus(){
    Mainbus.superclass.apply(this, arguments);
    this.value = 0;
    this.bits = new LedBits('[data-mb-bit]');
    this.digit = new Segment('[data-mb-value]');
  }
  prototype.set = function(it){
    this.value = it;
    this.bits.set(it);
    return this.digit.set(pad2(it, 16));
  };
  return Mainbus;
}(Module));
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}



},{"../components/ledbits":3,"../components/segment":4,"./module":9,"helpers":5}],9:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, Q, Module;
ref$ = require('helpers'), log = ref$.log, Q = ref$.Q;
module.exports = Module = (function(){
  Module.displayName = 'Module';
  var prototype = Module.prototype, constructor = Module;
  function Module(sel){
    this.dom = Q(sel);
  }
  prototype.clock = function(){
    return log('clock', this);
  };
  return Module;
}());



},{"helpers":5}],10:[function(require,module,exports){
// Generated by LiveScript 1.4.0
var ref$, log, wrap, LedBits, Segment, Flag, Module, ProgramCounter;
ref$ = require('helpers'), log = ref$.log, wrap = ref$.wrap;
LedBits = require('../components/ledbits');
Segment = require('../components/segment');
Flag = require('../components/flag');
Module = require('./module');
module.exports = ProgramCounter = (function(superclass){
  var prototype = extend$((import$(ProgramCounter, superclass).displayName = 'ProgramCounter', ProgramCounter), superclass).prototype, constructor = ProgramCounter;
  function ProgramCounter(){
    ProgramCounter.superclass.apply(this, arguments);
    this.ce = false;
    this.co = false;
    this.value = 0;
    this.bits = new LedBits('[data-pc-bit]');
    this.digit = new Segment('[data-pc-value]');
    this.flags = {
      ce: new Flag('[data-pc-flag="ce"]'),
      co: new Flag('[data-pc-flag="co"]')
    };
  }
  prototype.set = function(flag, val){
    if (this[flag] == null) {
      return console.warn('ProgramCounter::set - no such flag:', flag);
    }
    this[flag] = val;
    return this.flags[flag].set(val);
  };
  prototype.clock = function(){
    if (this.ce) {
      this.value = wrap(0, 15, this.value + 1);
      this.bits.set(this.value);
      return this.digit.set(this.value);
    }
  };
  return ProgramCounter;
}(Module));
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}



},{"../components/flag":1,"../components/ledbits":3,"../components/segment":4,"./module":9,"helpers":5}]},{},[6])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
